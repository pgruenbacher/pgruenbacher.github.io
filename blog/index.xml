<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Modicum</title>
    <link>http://pgruenbacher.github.io/blog/</link>
    <description>Recent content in Blogs on Modicum</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 10 May 2015 00:00:00 +0000</lastBuildDate>
    <atom:link href="http://pgruenbacher.github.io/blog/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Links to Stuff I Like</title>
      <link>http://pgruenbacher.github.io/blog/links-i-like/</link>
      <pubDate>Sun, 10 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://pgruenbacher.github.io/blog/links-i-like/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://developer.mozilla.org/en-US/docs/Web/JavaScript/A_re-introduction_to_JavaScript&#34; title=&#34;mozilla&#34;&gt;a re-introduction to javascript&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://kevinlondon.com/2015/05/05/code-review-best-practices.html&#34; title=&#34;kevin london&#34;&gt;code review&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.siftscience.com/blog/2015/best-practices-for-building-large-react-applications&#34; title=&#34;Alex Lopatin&#34;&gt;react best practices&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>How I learned to code [part 1]</title>
      <link>http://pgruenbacher.github.io/blog/how-i-learned-to-code-1/</link>
      <pubDate>Fri, 08 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://pgruenbacher.github.io/blog/how-i-learned-to-code-1/</guid>
      <description>

&lt;h2 id=&#34;disclaimer:4d5d26a1781ca2cdb65d43b83c101af1&#34;&gt;Disclaimer&lt;/h2&gt;

&lt;p&gt;I generally find it difficult to write about myself. This is especially true when looking back more than a year ago when I was just beginning to learn. Much of the energy that led to previous projects has been transferred onto current ones, and so I will only briefly mention or link to previous projecs. As time goes by I imagine my projects that are no longer maintained will end up being broken links as domains expire and such.&lt;/p&gt;

&lt;h2 id=&#34;intro:4d5d26a1781ca2cdb65d43b83c101af1&#34;&gt;Intro&lt;/h2&gt;

&lt;p&gt;My first time spent working on a web project was by first creating a &lt;a href=&#34;http://openwetware.org/wiki/OhioMod2013:Team/Paul&#34; title=&#34;my wiki page&#34;&gt;wiki&lt;/a&gt;
that would document my laboratory experience while working at Dr. Carlos &lt;a href=&#34;https://mae.osu.edu/people/castro.39&#34; title=&#34;castro lab website&#34;&gt;Castro&amp;rsquo;s&lt;/a&gt; lab. I find &lt;a href=&#34;http://openwetware.org/wiki/Main_Page&#34;&gt;openwetware&lt;/a&gt; to be a model format for other students in scientific lab to document their research, and I&amp;rsquo;d like to encourage all investigators to make their students write their notebooks in an online or at least digital format, which makes archiving 100x better. Although I doubt openwetware will take off, there are likely other wiki hosting formats for the scientific community.&lt;/p&gt;

&lt;p&gt;I later then did the design for the 2013 Ohio Mod team&amp;rsquo;s &lt;a href=&#34;http://openwetware.org/wiki/Biomod/2013/OSU&#34;&gt;website&lt;/a&gt; (slightly broken).This was primarily an exercise in Adobe Illustrator as pages are in fact a gif format with sliced links.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I came to quickly enjoy for making other designs for scientific figures, documents, and posters.&lt;/p&gt;

&lt;h3 id=&#34;links-to-reports-for-research:4d5d26a1781ca2cdb65d43b83c101af1&#34;&gt;Links to reports for research&lt;/h3&gt;

&lt;p&gt;
&lt;figure 
    &gt;
    
        &lt;a href=&#34;http://pgruenbacher.github.io/documents/maeslantkering.pdf&#34;&gt;
    
        &lt;img src=&#34;http://pgruenbacher.github.io/images/maeslantkering-thumbnail.gif&#34; 
        
            alt=&#34;made purely for fun&#34;
         /&gt;
    
        &lt;/a&gt;
    
    
        &lt;figcaption&gt;
            
                &lt;span&gt;&lt;strong&gt;Rotterdam sea gate graphic&lt;/strong&gt;&lt;/span&gt;&lt;/br&gt;
            
            
                &lt;span&gt;
                made purely for fun
                
                
            
            &lt;/span&gt; 
        
        &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;figure 
    &gt;
    
        &lt;a href=&#34;http://pgruenbacher.github.io/documents/fuel_cell.pdf&#34;&gt;
    
        &lt;img src=&#34;http://pgruenbacher.github.io/images/fuelcells-thumbnail.gif&#34; 
        
            alt=&#34;made as an application for nextech materials internship as well as for scholarship&#34;
         /&gt;
    
        &lt;/a&gt;
    
    
        &lt;figcaption&gt;
            
                &lt;span&gt;&lt;strong&gt;Fuel Cell Report 2014&lt;/strong&gt;&lt;/span&gt;&lt;/br&gt;
            
            
                &lt;span&gt;
                made as an application for nextech materials internship as well as for scholarship
                
                
            
            &lt;/span&gt; 
        
        &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h3 id=&#34;links-to-the-posters-of-previous-research-projects:4d5d26a1781ca2cdb65d43b83c101af1&#34;&gt;Links to the posters of previous research projects.&lt;/h3&gt;

&lt;p&gt;
&lt;figure 
    &gt;
    
        &lt;a href=&#34;http://pgruenbacher.github.io/images/Gruenbacher-poster_3-31-2011final.pdf&#34;&gt;
    
        &lt;img src=&#34;http://pgruenbacher.github.io/images/Gruenbacher-poster-3-31-2011final_thumb.gif&#34; 
        
            alt=&#34;poster used at the Denman event&#34;
         /&gt;
    
        &lt;/a&gt;
    
    
        &lt;figcaption&gt;
            
                &lt;span&gt;&lt;strong&gt;Nishikawara Report May 2011&lt;/strong&gt;&lt;/span&gt;&lt;/br&gt;
            
            
                &lt;span&gt;
                poster used at the Denman event
                
                
            
            &lt;/span&gt; 
        
        &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;
&lt;figure 
    &gt;
    
        &lt;a href=&#34;http://pgruenbacher.github.io/images/Denman_May2012_Gruenbacher_Poster_May1.pdf&#34;&gt;
    
        &lt;img src=&#34;http://pgruenbacher.github.io/images/Gruenbacher-poster-3-31-2011final_thumb.gif&#34; 
        
            alt=&#34;poster used at the Denman event&#34;
         /&gt;
    
        &lt;/a&gt;
    
    
        &lt;figcaption&gt;
            
                &lt;span&gt;&lt;strong&gt;Pelotonia Report May 2012&lt;/strong&gt;&lt;/span&gt;&lt;/br&gt;
            
            
                &lt;span&gt;
                poster used at the Denman event
                
                
            
            &lt;/span&gt; 
        
        &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;p&gt;I wanted to build an online portfolio that would incorporate my previous projects and art projects.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;I first started by following website and php tutorials online, with my very first tutorial series on building a dynamic website by &lt;a href=&#34;https://www.youtube.com/channel/UCw0ZIfZiV-BORQvok_cxNPw&#34;&gt;digicraft&lt;/a&gt; (I am very proud that I could remember the youtube channel). My very first website from scratch using php, bootstrap, and many jquery libraries was my &lt;a href=&#34;http://paulgruenbacher.com/bootstrap/about&#34;&gt;first about me&lt;/a&gt; website.&lt;/p&gt;

&lt;p&gt;My very first framework was &lt;a href=&#34;http://www.codeigniter.com&#34;&gt;code igniter&lt;/a&gt; which was quickly replaced by &lt;a href=&#34;laravel.com&#34;&gt;laravel&lt;/a&gt; by &lt;a href=&#34;http://taylorotwell.com/&#34;&gt;Taylor Otwell&lt;/a&gt;. The laravel framework was my first impression of how to implement a model view controller framework and object-relational mapping. The &lt;a href=&#34;https://laracasts.com/&#34;&gt;laracasts video tutorials&lt;/a&gt; by &lt;a href=&#34;https://twitter.com/jeffrey_way&#34;&gt;Jeffrey Way&lt;/a&gt; were especially useful.&lt;/p&gt;

&lt;p&gt;During the time I was learning the Laravel framework I was attempting to implement my first startup application: X-Press Cards. It was meant to be an online service for designing and printing cards. The laravel version was first &lt;a href=&#34;http://paulgruenbacher.com/xcards/&#34;&gt;x-press cards&lt;/a&gt;. Users would be able to upload a photo, write a message, import their addresses, and the card would then be sent from the web server to a printer. After printing the cards would be sent to respective addresses.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;javascript-apps:4d5d26a1781ca2cdb65d43b83c101af1&#34;&gt;Javascript Apps&lt;/h2&gt;

&lt;p&gt;The X-Press Cards website was then &lt;a href=&#34;https://github.com/pgruenbacher/xcards4&#34;&gt;reimplemented&lt;/a&gt; in the &lt;a href=&#34;https://docs.angularjs.org/guide/di&#34;&gt;Angular&lt;/a&gt; 1.0 JS framework. Angular and its directives first introduced me to the concept of dividing my work into discrete components for reusability. Two other angular apps built include:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://game-of-life-gl.firebaseapp.com/#/app&#34;&gt;game of life&lt;/a&gt; which was based off of &lt;a href=&#34;http://nullprogram.com/webgl-game-of-life/&#34;&gt;null program&amp;rsquo;s&lt;/a&gt; webgl experiment. I took ~1000 existing game of life patterns and added them as a library to the game. I had meant to add navigation and an improved interface to the game for high school students to use, but it failed to garner enough interest to justify the time.&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://bullet.firebaseapp.com/#/intro&#34;&gt;bullet-feed&lt;/a&gt; which was meant to be an event/location-based messaging system using the real-time benefits of firebase and websockets. It was actually originally going to be called YakYak (until we saw YikYak had already done something similar just 11 months earlier).&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.mydrive5.com/&#34;&gt;MyDrive5&lt;/a&gt; built using the MEAN stack of mongoDB, Angular, node and express. Is meant to be a free website builder wich would generate money by charging a percentage from donation processing. I also began learning node.js at this time.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Although I enjoyed the increased productivity with Angular and the many supporting open-source libraries, I also came to realize that Angular 1.0 has several problems
including:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Long loading time for angular app to start&lt;/li&gt;
&lt;li&gt;Constrained to the Angular way of doing things rather than learning best javascript practices.&lt;/li&gt;
&lt;li&gt;As a complex framework it does not allow for a very deep understanding of the underlying code.&lt;/li&gt;
&lt;li&gt;It does everything, which means stuck with a monolithic framework with no ability to use non-Angular libraries.&lt;/li&gt;
&lt;li&gt;The entire website can break from angular errors or missing javascript files.&lt;/li&gt;
&lt;li&gt;Poor search engine optimization&lt;/li&gt;
&lt;li&gt;Having to repeat certain logic in the front-end app and back-end api.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Ultimately though the biggest reason I left Angular was because the very premise of a single page app is simply not justified in most cases. Unless a web page requires a complex interface such as google maps or gmail, it is often better to stick to a static or server-side rendering of the web page.This is why I became so excited when I discovered React and its premise of isomorphic rendering on both the client and server.&lt;/p&gt;

&lt;p&gt;There is a large variety of flux implementations for React, my two favorites have been the Yahoo &lt;a href=&#34;https://github.com/yahoo/fluxible&#34;&gt;fluxible&lt;/a&gt; or &lt;a href=&#34;http://acdlite.github.io/flummox&#34;&gt;flummox&lt;/a&gt;, both of which directly feature the isomorphic rendering. I&amp;rsquo;ve had the quickest implementation of Fluxible which I&amp;rsquo;ve been rebuilding the &lt;a href=&#34;https://github.com/pgruenbacher/mydrive7&#34;&gt;MyDrive7&lt;/a&gt; site for.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&#34;golang:4d5d26a1781ca2cdb65d43b83c101af1&#34;&gt;Golang&lt;/h2&gt;

&lt;p&gt;Probably my favorite language to have learned and to develop in has been the &lt;a href=&#34;https://golang.org/&#34;&gt;Go Language&lt;/a&gt;. Much of its advantages come from its community and its opinionated way of doing things. As my first systems language, I&amp;rsquo;ve really come to enjoy the strict typing of the compiler and the minimal dependency that the compiled static-binaries offer.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>My Markdown References</title>
      <link>http://pgruenbacher.github.io/blog/markdown-references/</link>
      <pubDate>Fri, 08 May 2015 00:00:00 +0000</pubDate>
      
      <guid>http://pgruenbacher.github.io/blog/markdown-references/</guid>
      <description>

&lt;p&gt;Table of Contents&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;#intro&#34;&gt;intro&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#references&#34;&gt;references&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#linking&#34;&gt;linking&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;#images&#34;&gt;images&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;a name=&#34;intro&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;intro:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Intro&lt;/h2&gt;

&lt;p&gt;This blog uses markdown for content generation. Therefore this post was written in order to provide a quick self-reference for markdown generation.
Much is copied from &lt;a href=&#34;http://daringfireball.net/projects/markdown/syntax&#34;&gt;daringfireball&lt;/a&gt;, adam&amp;rsquo;s &lt;a href=&#34;https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet&#34;&gt;cheatsheset&lt;/a&gt;, and from &lt;a href=&#34;http://en.wikipedia.org/wiki/Markdown&#34;&gt;wikipedia&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Current tools I use are &lt;a href=&#34;https://github.com/SublimeText-Markdown/MarkdownEditing&#34;&gt;sublime-markdown-editing&lt;/a&gt;. I set the colorscheme dark by going to sublime -&amp;gt; preferences -&amp;gt; settings-More -&amp;gt; syntax specific-User and edited the file to have the configuration:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-json&#34;&gt;{
    &amp;quot;color_scheme&amp;quot;: &amp;quot;Packages/MarkdownEditing/MarkdownEditor-Dark.tmTheme&amp;quot;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a name=&#34;references&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;references:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;References&lt;/h2&gt;

&lt;p&gt;Hugo is slightly trickier than other markdown interpreters&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;For tables I simply use html tags. Unfortunately markdown isn&amp;rsquo;t processed within html tags. The pipelines alternative isn&amp;rsquo;t very appealing at all.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;lt;table&amp;gt;
    &amp;lt;thead&amp;gt;
        &amp;lt;th&amp;gt;Markdown&amp;lt;/th&amp;gt;
        &amp;lt;th&amp;gt;Output&amp;lt;/th&amp;gt;
    &amp;lt;/thead&amp;gt;
    &amp;lt;tbody&amp;gt;
        &amp;lt;tr&amp;gt;
            &amp;lt;td&amp;gt;Example Markdown&amp;lt;/td&amp;gt;
            &amp;lt;td&amp;gt;Example Ouput&amp;lt;/td&amp;gt;
        &amp;lt;/tr&amp;gt;
    &amp;lt;/tbody&amp;gt;
&amp;lt;/table&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;table&gt;
    &lt;thead&gt;
        &lt;th&gt;Markdown&lt;/th&gt;
        &lt;th&gt;Output&lt;/th&gt;
    &lt;/thead&gt;
    &lt;tbody&gt;
        &lt;tr&gt;
            &lt;td&gt;Example Markdown&lt;/td&gt;
            &lt;td&gt;Example Ouput&lt;/td&gt;
        &lt;/tr&gt;
    &lt;/tbody&gt;
&lt;/table&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;pre&gt;&lt;code&gt;# Heading 
## Sub-heading 
### Another deeper heading
 
*italic*, **bold**, `monospace`, ~~strikethrough~~ .
 
A [link](http://example.com)

Dot list:

  * apples
  * oranges
 
Numbered list:

  1. apples
  2. oranges
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;heading:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Heading&lt;/h1&gt;

&lt;h2 id=&#34;sub-heading:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Sub-heading&lt;/h2&gt;

&lt;h3 id=&#34;another-deeper-heading:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Another deeper heading&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;italic&lt;/em&gt;, &lt;strong&gt;bold&lt;/strong&gt;, &lt;code&gt;monospace&lt;/code&gt;, &lt;del&gt;strikethrough&lt;/del&gt; .&lt;/p&gt;

&lt;p&gt;A &lt;a href=&#34;http://example.com&#34;&gt;link&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Dot list:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;apples&lt;/li&gt;
&lt;li&gt;oranges&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Numbered list:&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;apples&lt;/li&gt;
&lt;li&gt;oranges&lt;/li&gt;
&lt;/ol&gt;

&lt;pre&gt;&lt;code&gt;&amp;gt; This is the first level of quoting.
&amp;gt;
&amp;gt; &amp;gt; This is nested blockquote.
&amp;gt;
&amp;gt; Back to the first level.
&lt;/code&gt;&lt;/pre&gt;

&lt;blockquote&gt;
&lt;p&gt;This is the first level of quoting.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;This is nested blockquote.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Back to the first level.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;linking&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;linking:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Linking&lt;/h2&gt;

&lt;p&gt;Useful for saving your links in a section of the markdown as references&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;I get 10 times more traffic from [Google] [1] than from
[Yahoo] [2] or (implicit link)-&amp;gt; [MSN] [].
  `[1]: http://google.com/        &amp;quot;Google&amp;quot;`
  `[2]: http://search.yahoo.com/  &amp;quot;Yahoo Search&amp;quot;`
  `[MSN]: http://search.msn.com/    &amp;quot;MSN Search&amp;quot;`

&amp;lt;http://example.com/&amp;gt;
&amp;lt;address@example.com&amp;gt;
Can also link to parts of page using a link tag
[link to header](#headerId)

### Some Header
&amp;lt;a name=&amp;quot;headerId&amp;quot;&amp;gt;&amp;lt;/a&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I get 10 times more traffic from &lt;a href=&#34;http://google.com/&#34; title=&#34;Google&#34;&gt;Google&lt;/a&gt; than from
&lt;a href=&#34;http://search.yahoo.com/&#34; title=&#34;Yahoo Search&#34;&gt;Yahoo&lt;/a&gt; or (implicit link)-&amp;gt; &lt;a href=&#34;http://search.msn.com/&#34; title=&#34;MSN Search&#34;&gt;MSN&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;http://example.com/&#34;&gt;http://example.com/&lt;/a&gt;
&lt;a href=&#34;mailto:address@example.com&#34;&gt;address@example.com&lt;/a&gt;
Can also link to parts of page using a link tag
&lt;a href=&#34;#headerId&#34;&gt;link to header&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a name=&#34;headerId&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h3 id=&#34;some-header:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Some Header&lt;/h3&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;a name=&#34;images&#34;&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;images:3f2ad45f54944fc8ae828260292c7d26&#34;&gt;Images&lt;/h2&gt;

&lt;pre&gt;&lt;code&gt;![Alt text][imageId]

`[imageId]: /images/sample.png  &amp;quot;Image attribute&amp;quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&#34;http://pgruenbacher.github.io/images/sample.png&#34; alt=&#34;Alt text&#34; title=&#34;Image attribute&#34; /&gt;
&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>